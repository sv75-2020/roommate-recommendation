template header
    preference
    feature
    points
    salience
    number

package cep;
import com.ftn.sbnz.model.models.Accommodation;
import com.ftn.sbnz.model.models.AccommodationPreferences;
import java.util.Map;


global Map<Long, Integer> accommodationCompatibility;
global java.lang.Long recommendedRoommate;

template "accommodation-template"

rule "Rate accommodation by @{feature}"
salience @{salience}
when
    $accommodation:Accommodation($feature:@{feature})
    $count : Number(intValue == @{number}) from accumulate(
            $preference : AccommodationPreferences( @{preference} == $feature ),
            count($preference)
        )
then
    System.out.println("AA");
    Integer compatibility = (Integer) accommodationCompatibility.get($accommodation.getId());
    compatibility+=@{points}*$count.intValue();
    accommodationCompatibility.put($accommodation.getId(), compatibility);
end
end template